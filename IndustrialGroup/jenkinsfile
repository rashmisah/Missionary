def Pipeline_Message
pipeline{
environment {
    registry = "industrialimage"
    }
  agent any
  
  stages {
    stage('Cloning Git') {
      steps {
        git branch:'master', url:'https://github.com/rashmisah/Missionary.git'
        script 
        {
            Pipeline_Message=env.STAGE_NAME
            echo "Cloning Git"
        }
      }
    }
   
    stage('Clean Old Packages') 
    {
        steps
        {
            script 
            {
                Pipeline_Message=env.STAGE_NAME
                echo "Cleaning old packages"
            }
            dir("/root/.jenkins/workspace/dockertest/IndustrialGroup")
            {
                sh label: 'Clean', script: 'mvn clean'
            }
        }
    }
    stage('Maven Compile') 
    {
        steps
        {
            script 
            {
                Pipeline_Message=env.STAGE_NAME
                echo "Maven Compile"
            }
            dir("/root/.jenkins/workspace/dockertest/IndustrialGroup")
            {
                sh label: 'Compile', script: 'mvn compile'
            }
        }
    }
    stage('Maven Package and install') 
    {
        steps
        {
            dir("/root/.jenkins/workspace/dockertest/IndustrialGroup")
            {
                sh label: 'Testing', script: 'mvn clean install'
            }
            script 
            {
                Pipeline_Message=env.STAGE_NAME
                echo "Package and Install"
            }
        }
    }
    stage('Docker stage deployment') 
    {
        steps
        {         
            dir("/root/.jenkins/workspace/dockertest/IndustrialGroup/")
            {
                script: 'docker-compose up -d --build'            
            }
        }
      }
    }
  }

